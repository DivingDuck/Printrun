setup on osx:
(install python 3.10)
(install python extension compile environment, this is automatically done if you have xcode)
(install git)
git clone http://github.com/kliment/Printrun.git
cd Printrun
git pull
python3 -m venv v3
. ./v3/bin/activate
pip install --upgrade pip
pip install --upgrade setuptools
pip install -r requirements.txt
pip install cython
python setup.py build_ext --inplace

for running:
python pronterface.py

for packaging:
pip install pyinstaller
pyi-makespec --hidden-import="pkg_resources.py2_warn" -F --add-data images/\*:images --add-data \*.png:. --add-data \*.ico:. -w -i P-face.icns pronterface.py
rm -rf dist
sed -i '' '$ s/.$//' pronterface.spec
cat >> pronterface.spec <<EOL
,
info_plist={
    'NSPrincipalClass': 'NSApplication',
    'NSAppleScriptEnabled': False,
    'NSAppSleepDisabled': True,
  },
)
EOL
pyinstaller --clean pronterface.spec -y
(optional) codesign -s identityname dist/pronterface.app --deep

setup on windows:
(install python 3.10)
(install python extension compile environment, see https://wiki.python.org/moin/WindowsCompilers )
(install git)
(for further informations pls. see script file release_windows.bat where we implemented 
an automated build for windows)
git clone http://github.com/kliment/Printrun.git
cd Printrun
git pull
\path\to\python3\python -m venv v3
v3\Scripts\activate
pip install --upgrade pip
pip install --upgrade setuptools
pip install wheel
pip install cython
pip install -r requirements.txt
pip install simplejson
pip install pypiwin32
pip install polygon3    * please see remark
python setup.py build_ext --inplace

for running:
python pronterface.py

for packaging:
pip install pyinstaller
pyi-makespec -F --add-data images/*;images --add-data *.png;. --add-data *.ico;. -w -i pronterface.ico pronterface.py
pyinstaller --clean pronterface.spec -y

Remark: 
The library polygon is free for non commercial use. You can build Pronterface without 
this library but then it will run slower.
Please find further details here: https://pypi.org/project/Polygon3/